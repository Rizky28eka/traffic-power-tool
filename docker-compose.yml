version: "3.8"

services:
  nginx:
    image: nginx:latest
    container_name: traffic-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - traffic_network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: traffic-frontend
    environment:
      - NODE_ENV=production
      - BACKEND_URL=http://backend:8000
    networks:
      - traffic_network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: traffic-backend
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DB=traffic_power_tool
      - MYSQL_USER=traffic_user
      - MYSQL_PASSWORD=traffic_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SECRET_KEY=a-secure-and-random-secret-key-for-production
      - APP_ENV=production
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./data:/app/output
      - ./logs:/app/logs
    networks:
      - traffic_network
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    container_name: traffic-mysql
    environment:
      - MYSQL_DATABASE=traffic_power_tool
      - MYSQL_USER=traffic_user
      - MYSQL_PASSWORD=traffic_password
      - MYSQL_ROOT_PASSWORD=root_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/migrations:/docker-entrypoint-initdb.d
    networks:
      - traffic_network
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: traffic-redis
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - traffic_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:

networks:
  traffic_network:
    driver: bridge