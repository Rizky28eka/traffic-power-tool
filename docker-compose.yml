version: '3.8'

services:
  backend:
    build: ./backend
    container_name: traffic-backend
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=traffic_power_tool
      - POSTGRES_USER=traffic_user
      - POSTGRES_PASSWORD=traffic_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SECRET_KEY=your-secret-key-here-minimum-32-characters
    depends_on:
      - postgres
      - redis
    volumes:
      - ./data:/app/output
      - ./logs:/app/logs
    networks:
      - traffic-network
    restart: unless-stopped

  frontend:
    build: ./frontend
    container_name: traffic-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - traffic-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: traffic-postgres
    environment:
      POSTGRES_DB: traffic_power_tool
      POSTGRES_USER: traffic_user
      POSTGRES_PASSWORD: traffic_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - traffic-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: traffic-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - traffic-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  traffic_network:
    driver: bridge